{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","timer","document","getElementById","daysSpan","querySelector","hoursSpan","minsSpan","secsSpan","CountdownTimer","constructor","targetDate","Date","getTime","intervalForTimer","updateTimer","currentTime","now","time","days","resalt","Math","floor","hours","pad","mins","secs","console","log","updateClockFace","setTimeout","textContent","value","String","padStart"],"mappings":";AAAA,MAAMA,EAAO,CACXC,MAAOC,SAASC,eAAe,WAC/BC,SAAUF,SAASG,cAAc,uBACjCC,UAAWJ,SAASG,cAAc,wBAClCE,SAAUL,SAASG,cAAc,uBACjCG,SAAUN,SAASG,cAAc,wBAGnC,MAAMI,EACJC,aAAY,WAAEC,IACPA,KAAAA,WAAaA,GAItB,MAAMV,EAAQ,IAAIQ,EAAe,CAC/BE,WAAY,IAAIC,KAAK,cAAcC,QAAQ,gBAG7C,IAAIC,EAAmB,KAIvB,SAASC,IAEDC,MAAAA,EAAcJ,KAAKK,MAKrBhB,GADJiB,KAAOjB,EAAMU,WAAaK,EACtBf,EAAMU,aAAeK,EAChB,MAAA,cAEHG,MAIAC,EAAS,CAAED,KAJJE,KAAKC,MAAMJ,KAAQ,OAITK,MAHTC,EAAIH,KAAKC,MAAOJ,KAAQ,MAAyB,OAGjCO,KAFjBD,EAAIH,KAAKC,MAAOJ,KAAQ,KAAoB,MAErBQ,KADvBF,EAAIH,KAAKC,MAAOJ,KAAQ,IAAc,OAEnDS,QAAQC,IAAIR,GACZS,EAAgBT,GAEhBN,EAAmBgB,WAAWf,EAAa,KAG7C,SAASc,GAAgB,KAAEV,EAAF,MAAQI,EAAR,KAAeE,EAAf,KAAqBC,IAC5C1B,EAAKI,SAAS2B,YAAcZ,EAC5BnB,EAAKM,UAAUyB,YAAcR,EAC7BvB,EAAKO,SAASwB,YAAcN,EAC5BzB,EAAKQ,SAASuB,YAAcL,EAE9B,SAASF,EAAIQ,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KA9BnCnB;;;;ACnBA,aADA,QAAA,cACA,QAAA","file":"src.3e619b15.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  timer: document.getElementById('timer-1'),\n  daysSpan: document.querySelector('[data-value=\"days\"]'),\n  hoursSpan: document.querySelector('[data-value=\"hours\"]'),\n  minsSpan: document.querySelector('[data-value=\"mins\"]'),\n  secsSpan: document.querySelector('[data-value=\"secs\"]'),\n}\n\nclass CountdownTimer {\n  constructor({ targetDate }) {\n    this.targetDate = targetDate;\n  }\n};\n\nconst timer = new CountdownTimer({\n  targetDate: new Date('2021-12-31').getTime('2021-12-31')\n});\n\nlet intervalForTimer = null;\n\nupdateTimer();\n\nfunction updateTimer() {\n//текущая дата\n  const currentTime = Date.now();\n\n//Для подсчета значений используй следующие готовые формулы, где time - разница между targetDate и текущей датой.\n  \n  time = timer.targetDate - currentTime;\n  if (timer.targetDate === currentTime) {\n    return 'Время вышло'\n  }\n  const days = Math.floor(time / (1000 * 60 * 60 * 24));\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  const resalt = { days, hours, mins, secs };\n  console.log(resalt);\n  updateClockFace(resalt)\n\n  intervalForTimer = setTimeout(updateTimer, 1000);\n}\n\nfunction updateClockFace({ days, hours, mins, secs }) {\n  refs.daysSpan.textContent = days;\n  refs.hoursSpan.textContent = hours;\n  refs.minsSpan.textContent = mins;\n  refs.secsSpan.textContent = secs\n}\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n};\n\n// Плагин это класс CountdownTimer, экземпляр которого создает новый таймер с настройками.\n\n/*new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2019'),\n});\nДля подсчета значений используй следующие готовые формулы, где time - разница между targetDate и текущей датой.\n\n/*\n * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\n * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\n */\n//const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n/*\n * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\n * остатка % и делим его на количество миллисекунд в одном часе\n * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\n */\n//const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\n/*\n * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\n * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\n */\n//const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n\n/*\n * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\n * миллисекунд в одной секунде (1000)\n */\n//const secs = Math.floor((time % (1000 * 60)) / 1000);","import './js/timer';\nimport './sass/main.scss';\n"]}